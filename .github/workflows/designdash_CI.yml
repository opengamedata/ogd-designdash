# Workflow to build and deploy designer dashboard to server.
name: OpenGameData-DesignDash CI
on:
  workflow_dispatch: # Allow manual trigger of this workflow from the Actions tab
  push:
    paths:
    - '.github/workflows/designdash_CI.yml'
    - '.github/actions/**'
    - 'src/**'
    - 'package.json'

env:
  TARGET_PATH: ${{ vars.WEB_PATH }}${{ github.event.repository.name }}/${{ github.ref_name }}
  TARGET_HOST: ${{ vars.OGD_STAGING_HOST }}

jobs:
  ci_deploy:
    name: CI Deploy of Designer Dashboard
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:

    # 1. Local checkout & config
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up Config File
      uses: ./.github/actions/DesignDash_config
      with:
        api_origin: ${{ secrets.OGD_API_ORIGIN }}

    # 2. Build 
    - name: Install Node
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Install libraries
      run: npm clean-install
        npm ci
    - name: Build
      run: npm run build

    # 3. Remote config & deploy
    - name: Install OpenConnect
      run: sudo apt-get -q update && sudo apt-get -q install openconnect
    - name: Connect VPN
      run: echo ${{ secrets.VPN_PASS }} | sudo openconnect --protocol=gp -u ${{ secrets.VPN_USER }} --passwd-on-stdin soe.vpn.wisc.edu &

    - name: Setup Access Key
      run: |
        mkdir -p ~/.ssh
        echo '${{secrets.DEPLOY_KEY}}' >> ./key.txt
        chmod 600 ./key.txt
    - name: Ensure directory exists
      run: ssh -o StrictHostKeyChecking=no -t -i ./key.txt ${{ secrets.DEPLOY_USER }}@${{ env.TARGET_HOST }} "mkdir -p ${{ env.TARGET_PATH }}"
    - name: Upload to web server via rsync
      uses: burnett01/rsync-deployments@5.2
      with:
        switches: -vrc --exclude-from rsync-exclude
        path: build/*
        remote_path: ${{ env.TARGET_PATH }}
        remote_host: ${{ env.TARGET_HOST }}
        remote_user: ${{ secrets.DEPLOY_USER }}
        remote_key:  ${{ secrets.DEPLOY_KEY  }}
