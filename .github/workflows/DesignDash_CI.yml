# Workflow to build and deploy designer dashboard to server.
name: OpenGameData-DesignDash CI
on:
  push:
    paths:
    - 'src/**'
    - 'package.json'
    - '.github/workflows/DesignDash_CI.yml'
    - '.github/actions/**'
  workflow_dispatch: # Allow manual trigger of this workflow from the Actions tab

env:
  CI: ""

jobs:
  test_export:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Get OpenConnect installed
      run: sudo apt-get -q update && sudo apt-get -q install openconnect
    - name: Get Node installed
      run: sudo apt-get -q install nodejs
    - name: Connect VPN
      run: echo ${{ secrets.VPN_PASS }} | sudo openconnect --protocol=gp -u ${{ secrets.VPN_USER }} --passwd-on-stdin soe.vpn.wisc.edu &
    - name: Set up Config File
      uses: ./.github/actions/DesignDash_config
      with:
        api_origin: ${{ secrets.OGD_API_ORIGIN }}
    - name: Set up npm libraries and build
      run: |
        npm install
        npm run build
      shell: bash
    # - name: Deploy to CI folder on server
    #   run: make deploy-test
    #   shell: bash
    - name: Upload to web server via rsync
      uses: burnett01/rsync-deployments@5.2
      with:
        switches: -vrc --exclude-from rsync-exclude
        path: build/*
        remote_path: ${{ secrets.DESIGN_DASH_PATH }}
        remote_host: ${{ secrets.DESIGN_DASH_HOST }}
        remote_user: ${{ secrets.DESIGN_DASH_USER }}
        remote_key:  ${{ secrets.DESIGN_DASH_KEY  }}
    - name: Upload logs as artifacts
      uses: actions/upload-artifact@v2
      with:
        path: ./*.log
